<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAACAAAAAgAA
        AAIAAAACAAAAAwAAAAMAAAADAAAABAAAAAUAAAAGAAAABgAAAAYAAAAGAAAABgAAAAQAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAQAAAAGAAAACAAAAAoAAAANAAAAEAAAABMAAAAWAAAAGgAA
        AB0AAAAgAAAAIgAAACQAAAAmAAAAKAgICDkXFxdXIyMjZisrK2QbGxtVAAAARgAAAEYAAABGAAAAPQAA
        ACoAAAAVAAAABwAAAAMAAAAAAAAAAAAAAAEAAAACAAAABAAAAAYAAAAJAAAADAAAAA4AAAARAAAAFQAA
        ABgAAAAcAAAAHwAAACMAAAAlDAwMOxgYGJAZGRnYGhoa+xgYGP4eHh7+Tk5O/mhoaPxxcXHsa2tru0BA
        QHMAAAA4AAAAJwAAABQAAAAIAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAABAAAAAgAAAAIAAAADAAAAAxkZGQoUFBTrEBAQ/hEREf8TExP/FBQU/xcXF/9DQ0P/YmJi/3Z2
        dv+JiYn+l5eX/G9vb3wAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAbGxsvRUVFVD8/PwgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAIiIiFh4eHnYZGRkUAAAAABEREd0PDw//ERER/xMTE/8UFBT/FhYW/zk5
        Of9fX1//cnJy/4WFhf+YmJj/fX19twAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYGClwcHD9tra27LOz
        s6+SkpJ/eXl5Y2FhYVw6OjppISEhih0dHb8XFxf2EhIS/RwcHD8AAAAAERERsg8PD/8RERH/ExMT/xQU
        FP8VFRX/Ly8v/1tbW/9vb2//goKC/5WVlf+FhYXhAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWho
        aPjCwsL/1tbW/7e3t/6VlZX+dHR0/j8/P/4WFhb/FBQU/xISEv8RERH+FxcXawAAAAASEhKHDw8P/hAQ
        EP8SEhL/ExMT/xUVFf8mJib/VlZW/2tra/9+fn7/kpKS/5SUlPgAAAAYAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAY2Nj07Gxsf/a2tr/vr6+/5ycnP97e3v/TExM/xcXF/8UFBT/ExMT/xEREf4VFRWXAAAAABMT
        E1wPDw/+EBAQ/xISEv8TExP/FBQU/x4eHv9QUFD/aGho/3t7e/+Ojo7/nJyc/Tw8PD8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABfX1+on5+f/97e3v/ExMT/o6Oj/4GBgf9YWFj/Gxsb/xQUFP8TExP/ERER/xQU
        FMMAAAAAExMTNA8PD/0QEBD/EhIS/xMTE/8UFBT/GRkZ/0lJSf9kZGT/eHh4/4uLi/+cnJz+YWFhawAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlZWX6Ojo7/4ODg/8nJyf+pqan/h4eH/2NjY/8iIiL/FBQU/xMT
        E/8RERH/FBQU64mJiSWwsLBiW1tb9Tg4OPcUFBT7ExMT/hQUFP8WFhb/Pz8//2BgYP90dHT/h4eH/5mZ
        mf50dHSXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASUlJU4KCgv7e3t7/z8/P/6+vr/+NjY3/a2tr/yws
        LP8VFRX/FBQU/jg4OPmtqqb45uLb/unl3f/n49r/5+Pc/svIwvt0c3L2FxcX+xUVFf81NTX/XV1d/3Fx
        cf+EhIT/l5eX/319fcMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx8penp6/tbW1v/U1NT/tbW1/5OT
        k/9ycnL/OTk5/xYWFv5WVlb339nS/fTx7f/9/Pz//v79//7+/f/9/fz/+/r4/+fi3P+urKn4Hx8f+Ssr
        K/9ZWVn/bW1t/4CAgP+UlJT/h4eH6gAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZra2v3ycnJ/9jY
        2P+7u7v/mpqa/3h4eP9GRkb/MzMz99vUzvz28/D/+/v5//39/P/29fL/udff/63Q3f/g5uP/+ff1/+nl
        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
        QAH4AEAB+AAAwfgAL/34AD///gD///////8=
</value>
  </data>
</root>